// <auto-generated />
using CityInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20240131144510_CityInfoDbUpdatePropertyPointsOfInterest")]
    partial class CityInfoDbUpdatePropertyPointsOfInterest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Residing town.",
                            Name = "Stoke-on-Trent"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Village home.",
                            Name = "Chakswari"
                        },
                        new
                        {
                            Id = 3,
                            Description = "City home.",
                            Name = "Islamabad"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Displays locally made ceramics, decorative arts and a WWII Spitfire.",
                            Name = "The Potteries Museum & Art Gallery"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "£10 million Wedgwood Museum visitor centre.",
                            Name = "Wedgwood Museum"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "The sixth-largest dam in the world.",
                            Name = "Mangla Dam"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "The main masjid in Chakswari.",
                            Name = "Chakswari Grand Central Jamia Mosque"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "The fifth-largest mosque in the world and the largest within South Asia, located on the foothills of Margalla Hills in Islamabad. It is named after the late King Faisal of Saudi Arabia.",
                            Name = "Faisal Mosque"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "A national monument and heritage museum located on the western Shakarparian Hills in Islamabad, Pakistan.",
                            Name = "Pakistan Monument"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfo.API.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
